package moe.plushie.armourers_workshop.compatibility.forge;

import moe.plushie.armourers_workshop.api.annotation.Available;
import moe.plushie.armourers_workshop.compatibility.core.AbstractRegistryManager;
import net.minecraft.resources.ResourceLocation;
import net.minecraft.tags.TagKey;
import net.minecraft.world.effect.MobEffectInstance;
import net.minecraft.world.entity.LivingEntity;
import net.minecraft.world.item.Item;
import net.minecraft.world.item.ItemStack;
import net.minecraft.world.item.enchantment.EnchantmentHelper;
import net.minecraft.world.level.block.Block;
import net.minecraft.world.level.block.state.BlockState;
import net.minecraftforge.registries.ForgeRegistries;

import java.util.function.Function;
import java.util.function.Predicate;

@Available("[1.18, 1.21)")
public class AbstractForgeRegistryManager extends AbstractRegistryManager {

    public static final AbstractForgeRegistryManager INSTANCE = new AbstractForgeRegistryManager();

    @Override
    protected ResourceLocation getItemKey0(Item item) {
        return ForgeRegistries.ITEMS.getKey(item);
    }

    @Override
    protected ResourceLocation getBlockKey0(Block block) {
        return ForgeRegistries.BLOCKS.getKey(block);
    }

    @Override
    protected Predicate<ItemStack> getItemTag0(ResourceLocation key) {
        var tag = TagKey.create(ForgeRegistries.Keys.ITEMS, key);
        return itemStack -> itemStack.is(tag);
    }

    @Override
    protected Predicate<BlockState> getBlockTag0(ResourceLocation key) {
        var tag = TagKey.create(ForgeRegistries.Keys.BLOCKS, key);
        return blockState -> blockState.is(tag);
    }

    @Override
    protected Predicate<Biome> getBiomeTag0(ResourceLocation key) {
        var tag = TagKey.create(ForgeRegistries.Keys.BIOMES, key);
        return info -> info.getLevel().getBiome(info.getBlockPos()).is(tag);
    }

    @Override
    protected Function<ItemStack, Integer> getEnchantment0(ResourceLocation key) {
        var enchantment = ForgeRegistries.ENCHANTMENTS.getValue(key);
        if (enchantment != null) {
            return itemStack -> EnchantmentHelper.getItemEnchantmentLevel(enchantment, itemStack);
        }
        return null;
    }

    @Override
    protected Function<LivingEntity, MobEffectInstance> getEffect0(ResourceLocation key) {
        var effect = ForgeRegistries.MOB_EFFECTS.getValue(key);
        if (effect != null) {
            return entity -> entity.getEffect(effect);
        }
        return null;
    }

    @Override
    protected Function<LivingEntity, Double> getAttribute0(ResourceLocation key) {
        var attribute = ForgeRegistries.ATTRIBUTES.getValue(key);
        if (attribute != null) {
            return entity -> entity.getAttributeValue(attribute);
        }
        return null;
    }
}
