package moe.plushie.armourers_workshop.compatibility.fabric;

import moe.plushie.armourers_workshop.api.annotation.Available;
import moe.plushie.armourers_workshop.compatibility.core.AbstractRegistryManager;
import net.fabricmc.fabric.api.tag.TagRegistry;
import net.minecraft.core.Registry;
import net.minecraft.resources.ResourceLocation;
import net.minecraft.world.effect.MobEffectInstance;
import net.minecraft.world.entity.LivingEntity;
import net.minecraft.world.item.Item;
import net.minecraft.world.item.ItemStack;
import net.minecraft.world.item.enchantment.EnchantmentHelper;
import net.minecraft.world.level.block.Block;
import net.minecraft.world.level.block.state.BlockState;

import java.util.function.Function;
import java.util.function.Predicate;

@Available("[1.16, 1.18)")
public class AbstractFabricRegistryManager extends AbstractRegistryManager {

    public static final AbstractFabricRegistryManager INSTANCE = new AbstractFabricRegistryManager();

    @Override
    protected ResourceLocation getItemKey0(Item item) {
        return Registry.ITEM.getKey(item);
    }

    @Override
    protected ResourceLocation getBlockKey0(Block block) {
        return Registry.BLOCK.getKey(block);
    }

    @Override
    protected Predicate<ItemStack> getItemTag0(ResourceLocation key) {
        var tag = TagRegistry.item(key);
        return itemStack -> itemStack.getItem().is(tag);
    }

    @Override
    protected Predicate<BlockState> getBlockTag0(ResourceLocation key) {
        var tag = TagRegistry.block(key);
        return blockState -> blockState.is(tag);
    }

    @Override
    protected Predicate<Biome> getBiomeTag0(ResourceLocation key) {
        return null; // not support in the 1.16.5
    }

    @Override
    protected Function<ItemStack, Integer> getEnchantment0(ResourceLocation key) {
        var enchantment = Registry.ENCHANTMENT.get(key);
        if (enchantment != null) {
            return itemStack -> EnchantmentHelper.getItemEnchantmentLevel(enchantment, itemStack);
        }
        return null;
    }

    @Override
    protected Function<LivingEntity, MobEffectInstance> getEffect0(ResourceLocation key) {
        var effect = Registry.MOB_EFFECT.get(key);
        if (effect != null) {
            return entity -> entity.getEffect(effect);
        }
        return null;
    }

    @Override
    protected Function<LivingEntity, Double> getAttribute0(ResourceLocation key) {
        var attribute = Registry.ATTRIBUTE.get(key);
        if (attribute != null) {
            return entity -> entity.getAttributeValue(attribute);
        }
        return null;
    }
}
